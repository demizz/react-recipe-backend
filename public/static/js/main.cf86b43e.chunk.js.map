{"version":3,"sources":["components/auth/Logout.js","components/Navbar.js","queries/index.js","components/Spinner.js","components/Error.js","components/LikeRecipe.js","components/Recipe/RecipePage.js","components/Recipe/SearchItem.js","components/Recipe/Search.js","components/User/UserInfo.js","components/User/UserRecipes.js","components/WithAuth.js","components/User/Profile.js","components/Recipe/AddRecipe.js","components/Recipe/RecipeItem.js","components/App.js","components/auth/Login.js","components/auth/Signup.js","components/WithSessions.js","components/Recipe/UserRecipe.js","components/Recipe/EditUserRecipe.js","index.js"],"names":["withRouter","props","client","console","log","onClick","localStorage","clear","resetStore","history","push","handleLogout","NavbarUnAuth","to","NavbarAuth","session","Fragment","exact","Navbar","token","getItem","GET_ALL_RECIPES","gql","SEARCH_RECPIES","GET_RECIPE","EDIT_RECIPE","SIGNUP_USER","ADD_RECIPE","GET_CURRENT_USER","GET_USER_RECIPES","LIKE_RECIPE","UNLIKE_RECIPE","DELETE_USER_RECIPE","LOGIN_USER","Spinner","className","color","size","margin","Error","error","LikeRecipe","useState","likeThisRecipe","setLikeThisRecipe","updateLike","cache","likeRecipe","data","id","getRecipe","readQuery","query","variables","_id","writeQuery","likes","updateUnlike","unlikeRecipe","loading","refetch","message","username","getCurrentUser","mutation","update","Provider","value","then","a","prev","handleLike","style","cursor","match","params","background","imageUrl","name","category","createdBy","role","aria-label","description","dangerouslySetInnerHTML","__html","instructions","SearchItem","recipe","display","alignItems","alignContent","Search","setSearchResults","searchTerm","setSearchTerm","handleChange","searchRecipes","type","autoFocus","onChange","e","target","persist","map","key","UserInfo","user","email","date","newDate","Date","toLocaleDateString","newTime","toLocaleTimeString","formatDate","joinDate","favorites","favorite","UserRecipes","handleDelete","deleteUserRecipe","window","confirm","getUserRecipes","length","refetchQueries","filter","WithAuth","Component","inputsValues","setInputsValues","handleInstructionsChange","newContent","editor","getData","handleSubmit","addRecipe","preventDefault","getAllRecipes","onSubmit","required","placeholder","htmlFor","content","events","change","disabled","RecipeItem","App","password","inputs","setInputs","loginUser","setItem","action","passwordConfirm","success","setSuccess","signupUser","setTimeout","WithSessions","UserRecipe","useHistory","editRecipe","event","ApolloClient","uri","fetchOptions","credentials","request","operation","setContext","headers","authorization","onError","networkError","statusCode","removeItem","RootWithSession","path","component","Profile","AddRecipe","RecipePage","EditUserRecipe","render","Signup","ReactDOM","document","getElementById"],"mappings":"gSA+BeA,eA1BA,SAACC,GAQZ,OACI,kBAAC,IAAD,MAEQ,SAACC,GAEG,OADAC,QAAQC,IAAIF,GAIxB,4BAAQG,QAAS,kBAdF,SAACH,GAChBI,aAAaC,QACbL,EAAOM,aACPP,EAAMQ,QAAQC,KAAK,KAWEC,CAAaT,KAAlC,gBCPFU,EAAa,WAEf,OACI,4BACI,4BACI,kBAAC,IAAD,CAASC,GAAG,KAAZ,SAEJ,4BACI,kBAAC,IAAD,CAASA,GAAG,WAAZ,WAGJ,4BACI,kBAAC,IAAD,CAASA,GAAG,UAAZ,UAGJ,4BACI,kBAAC,IAAD,CAASA,GAAG,WAAZ,aAMVC,EAAW,SAAC,GAAY,EAAXC,QACf,OACI,kBAAC,IAAMC,SAAP,KACE,4BACE,4BACI,kBAAC,IAAD,CAASH,GAAG,IAAII,OAAK,GAArB,SAEJ,4BACI,kBAAC,IAAD,CAASJ,GAAG,WAAZ,WAIJ,4BACI,kBAAC,IAAD,CAASA,GAAG,eAAZ,eAGJ,4BACI,kBAAC,IAAD,CAASA,GAAG,YAAZ,YAGJ,4BACI,kBAAC,EAAD,UAaDK,EAlEA,SAAC,GAAe,IAAdH,EAAa,EAAbA,QAEPI,EAAMb,aAAac,QAAQ,SACjC,OACI,8BACMD,GAAS,kBAAC,EAAD,MACVA,GAAS,kBAAC,EAAD,CAAYJ,QAASA,M,qjGCRpC,IAAMM,EAAkBC,YAAH,KAWfC,EAAiBD,YAAH,KAUdE,EAAaF,YAAH,KAeVG,EAAcH,YAAH,KAwBXI,EAAcJ,YAAH,KAOXK,EAAaL,YAAH,KA6BVM,EAAmBN,YAAH,KAahBO,EAAmBP,YAAH,KAUhBQ,EAAcR,YAAH,KAQXS,EAAgBT,YAAH,KAQbU,EAAqBV,YAAH,KAQlBW,EAAaX,YAAH,K,QCvIRY,EARC,WACd,OACE,yBAAKC,UAAU,WACb,kBAAC,cAAD,CAAaC,MAAK,UAAaC,KAAM,GAAIC,OAAQ,U,uDCKxCC,EARD,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACZ,OACI,2BACKA,ICiHEC,EA1GI,SAACxC,GAAW,IAAD,EACgByC,oBAAS,GADzB,mBACrBC,EADqB,KACLC,EADK,KActBC,EAAa,SAACC,EAAD,GAAsC,IAApBC,EAAmB,EAA3BC,KAAQD,WAC3BE,EAAOhD,EAAPgD,GACR9C,QAAQC,IAAI,CAAE6C,OAFwC,IAG9CC,EAAcJ,EAAMK,UAAU,CACpCC,MAAO5B,EACP6B,UAAW,CAAEC,IAAKL,KAFZC,UAIRJ,EAAMS,WAAW,CACfH,MAAO5B,EACP6B,UAAW,CAAEC,IAAKL,GAClBD,KAAM,CACJE,UAAU,2BAAMA,GAAP,IAAkBM,MAAOT,EAAWS,MAAQ,QAIrDC,EAAe,SAACX,EAAD,GAAwC,IAAtBY,EAAqB,EAA7BV,KAAQU,aAC7BT,EAAOhD,EAAPgD,GACAC,EAAcJ,EAAMK,UAAU,CACpCC,MAAO5B,EACP6B,UAAW,CAAEC,IAAKL,KAFZC,UAIRJ,EAAMS,WAAW,CACfH,MAAO5B,EACP6B,UAAW,CAAEC,IAAKL,GAClBD,KAAM,CACJE,UAAU,2BAAMA,GAAP,IAAkBM,MAAOE,EAAaF,MAAQ,QAI7D,OACE,kBAAC,IAAMxC,SAAP,KACE,kBAAC,IAAD,CAAOoC,MAAOxB,IACX,YAAwC,IAArCoB,EAAoC,EAApCA,KAAeR,GAAqB,EAA9BmB,QAA8B,EAArBnB,OAAqB,EAAdoB,QACxB,GAAIpB,EAAO,OAAO,kBAAC,EAAD,CAAOA,MAAOA,EAAMqB,UAEtC,IAAMC,EAAWd,EAAKe,eAAeD,SAErC,OACE,kBAAC,IAAD,CACEE,SAAUjC,EACVkC,OAAQR,EACRJ,UAAW,CAAEC,IAAKrD,EAAMgD,GAAIa,cAE3B,SAACJ,GACA,OACE,kBAAC,IAAD,CACEM,SAAUlC,EACVuB,UAAW,CAAEC,IAAKrD,EAAMgD,GAAIa,YAC5BG,OAAQpB,IAEP,SAACJ,GACA,OACEqB,GACE,kBAAC,IAAYI,SAAb,CACEC,MACExB,EACI,CACEP,MAAO,MACPD,UAAW,oBACXE,KAAM,UAER,CACED,MAAO,QACPD,UAAW,oBACXE,KAAM,WAId,yBACEhC,QAAS,kBAhFlB,SAAC0C,EAAYW,EAAcE,GACvCjB,EAKHe,IAAeU,KAAf,uCAAoB,uBAAAC,EAAA,wDAASrB,KAC3BJ,GAAkB,SAAC0B,GAAD,OAAWA,KADX,2CAApB,uDAJAvB,IAAaqB,KAAb,uCAAkB,uBAAAC,EAAA,wDAASrB,KACzBJ,GAAkB,SAAC0B,GAAD,OAAWA,KADb,2CAAlB,uDA+E0BC,CAAW9B,EAAYiB,IAEzBc,MAAO,CAAEC,OAAQ,WACjBtC,UAAU,eAEV,kBAAC,IAAD,mBC5BfnC,eA/DI,SAAC,GAAe,IAAb0E,EAAY,EAAZA,MACpBvE,QAAQC,IAAIsE,EAAMC,QAClB,IAAMrB,EAAMoB,EAAMC,OAAO1B,GAGzB,OAFA9C,QAAQC,IAAIkD,GAGV,kBAAC,IAAD,CAAOF,MAAO5B,EAAY6B,UAAW,CAAEC,SACpC,YAA+B,IAA5BK,EAA2B,EAA3BA,QAASnB,EAAkB,EAAlBA,MAAOQ,EAAW,EAAXA,KAClB,OAAIW,EAAgB,kBAAC,EAAD,MAChBnB,EAAc,kBAAC,EAAD,CAAOA,MAAOA,EAAMqB,UAGpC,yBAAK1B,UAAU,OACb,yBACEA,UAAU,eACVqC,MAAO,CACLI,WAAW,OAAD,OAAS5B,EAAKE,UAAU2B,SAAxB,uCAGd,yBAAK1C,UAAU,UACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,eACZ,gCAASa,EAAKE,UAAU4B,OAE1B,4BACE,gCAAS9B,EAAKE,UAAU6B,WAE1B,yCACa,gCAAS/B,EAAKE,UAAU8B,YAErC,yBAAK7C,UAAU,OACb,yBAAKA,UAAU,wBACb,2BACGa,EAAKE,UAAUM,MAAO,IACvB,0BAAMyB,KAAK,MAAMC,aAAW,SACzB,IADH,gBAGQ,MAGZ,yBAAK/C,UAAU,aACb,kBAAC,EAAD,CAAYc,GAAID,EAAKE,UAAUI,SAIrC,gCAAYnB,UAAU,sBACnBa,EAAKE,UAAUiC,aAElB,wBAAIhD,UAAU,8BAAd,gBACA,yBACEA,UAAU,sBACViD,wBAAyB,CACvBC,OAAQrC,EAAKE,UAAUoC,wBClB1BC,EA1CI,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpB,OACE,yBACErD,UAAU,4CACVqC,MAAO,CACLiB,QAAS,OACTC,WAAY,SACZC,aAAc,WAGhB,yBACExD,UAAU,uBACVqC,MAAO,CAAEiB,QAAS,OAAQC,WAAY,WAEtC,kBAAC,IAAD,CAAM7E,GAAE,mBAAc2E,EAAOlC,MAC3B,4BAAKkC,EAAOV,QAGhB,yBACE3C,UAAU,YAOV,+BAAKqD,EAAOhC,MAAZ,qBAEF,yBACErB,UAAU,YAOV,4BAAQA,UAAU,mBAAlB,IAAsCqD,EAAOT,SAA7C,QC2BOa,GA3DA,WAAO,IAAD,EACuBlD,mBAAS,IADhC,mBACGmD,GADH,aAEiBnD,mBAAS,IAF1B,mBAEZoD,EAFY,KAEAC,EAFA,KAGbC,EAAe,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACtBJ,EAAiB,CAAEI,kBACnB9F,QAAQC,IAAI,CAAE6F,mBAEhB,OACE,kBAAC,IAAD,MACG,SAAC/F,GACA,OACE,kBAAC,IAAD,CAAOkD,MAAO7B,EAAgB8B,UAAW,CAAEyC,gBACxC,YAA+B,IAA5B9C,EAA2B,EAA3BA,KAAMW,EAAqB,EAArBA,QAASnB,EAAY,EAAZA,MAGjB,OAFArC,QAAQC,IAAI4C,GAERR,EAAc,6BAAMA,EAAMqB,SAE5B,yBAAK1B,UAAU,8BACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,eACb,2BACEA,UAAU,YACV+D,KAAK,SACLpB,KAAK,SACL7B,GAAG,GACHkD,WAAS,EACThC,MAAO2B,EACPM,SAAQ,uCAAE,WAAOC,GAAP,iBAAAhC,EAAA,6DACRlE,QAAQC,IAAIiG,EAAEC,OAAOnC,OACrBkC,EAAEE,UACFR,EAAcM,EAAEC,OAAOnC,OAHf,SAIejE,EAAOkD,MAAM,CAClCA,MAAO7B,EACP8B,UAAW,CAAEyC,WAAYO,EAAEC,OAAOnC,SAN5B,gBAIAnB,EAJA,EAIAA,KAIRgD,EAAahD,GARL,2CAAF,4DAcdW,GACA,4BACGX,EAAKiD,cAAcO,KAAI,SAAChB,GACvB,OAAO,kBAAC,EAAD,CAAYiB,IAAKjB,EAAOlC,IAAKkC,OAAQA,gBCSrDkB,GAvDE,SAAC,GAAgB,EAAd3F,QAMlB,OACE,kBAAC,IAAD,CAAOqC,MAAOxB,IACX,YAAmD,IAAxCmC,EAAuC,EAA/Cf,KAAQe,eAAkBvB,EAAqB,EAArBA,MAAOmB,EAAc,EAAdA,QACnCxD,QAAQC,IAAI2D,GACZ5D,QAAQC,IAAI,CAAEoC,UACd,IAAMmE,EAAO5C,EACb,OAAIJ,EAAgB,2CAChBnB,EAAc,kBAAC,EAAD,CAAOA,MAAOA,EAAMqB,UAEpC,6BACE,yCACA,wCAAc8C,EAAK7C,UACnB,qCAAW6C,EAAKC,OAChB,yCAlBS,SAACC,GAClB,IAAMC,EAAU,IAAIC,KAAKF,GAAMG,mBAAmB,SAC5CC,EAAU,IAAIF,KAAKF,GAAMK,mBAAmB,SAClD,MAAM,GAAN,OAAUJ,EAAV,cAAuBG,GAeAE,CAAWR,EAAKS,WAW/B,4BACE,4BAAKT,EAAK7C,SAAV,gBACC6C,EAAKU,WACJV,EAAKU,UAAUb,KAAI,SAACc,GAClB,OACE,wBAAIb,IAAKa,EAAShE,KAChB,kBAAC,IAAD,CAAMzC,GAAE,mBAAcyG,EAAShE,MAC7B,2BAAIgE,EAASxC,YAKrB6B,EAAKU,WACL,uBAAGlF,UAAU,WAAb,mDCuEDoF,GA5GK,WAClB,IAAMC,EAAe,SAACC,GACEC,OAAOC,QAC3B,iDAGAF,IAAmBrD,MAAK,YAAe,IAAZpB,EAAW,EAAXA,KACzB7C,QAAQC,IAAI4C,OAIlB,OACE,kBAAC,IAAMhC,SAAP,KACE,yBAAKmB,UAAU,aACb,kBAAC,IAAD,CAAOiB,MAAOxB,IACX,YAA+B,IAA5B+B,EAA2B,EAA3BA,QAASX,EAAkB,EAAlBA,KAAkB,EAAZR,MACjB,GAAImB,EAAS,OAAO,kBAAC,EAAD,MACpBxD,QAAQC,IAAI4C,GACZ,IAAMc,EAAWd,EAAKe,eAAeD,SACrC,OACE,kBAAC,IAAD,CAAOV,MAAOvB,EAAkBwB,UAAW,CAAES,cAC1C,YAA+B,IAA5Bd,EAA2B,EAA3BA,KAAMW,EAAqB,EAArBA,QAASnB,EAAY,EAAZA,MACjB,OAAImB,EAAgB,kBAAC,EAAD,MAChBnB,EAAc,6BAAMA,EAAMqB,UAC9B1D,QAAQC,IAAI4C,GAEV,kBAAC,IAAMhC,SAAP,KACE,6CAEEgC,EAAK4E,eAAeC,QACpB,6DAGD7E,EAAK4E,eAAepB,KAAI,SAAChB,GACxB,OAQE,yBAAKrD,UAAU,qDACb,yBAAKA,UAAU,YACb,wBAAIA,UAAU,cAAcqD,EAAOV,OAErC,yBAAK3C,UAAU,YACb,kBAAC,IAAD,CACE6B,SAAUhC,EACVqB,UAAW,CAAEC,IAAKkC,EAAOlC,KACzBwE,eAAgB,iBAAM,CACpB,CAAE1E,MAAO/B,GACT,CAAE+B,MAAOxB,KAEXqC,OAAQ,SACNnB,EADM,GAGF,IADM2E,EACP,EADDzE,KAAQyE,iBAEFG,EAAmB9E,EAAMK,UAAU,CACzCC,MAAOvB,EACPwB,UAAW,CAAES,cAFP8D,eAIR9E,EAAMS,WAAW,CACfH,MAAOvB,EACPwB,UAAW,CAAES,YACbd,KAAM,CACJ4E,eAAgBA,EAAeG,QAC7B,SAACvC,GAAD,OACEA,EAAOlC,MAAQmE,EAAiBnE,aAMzC,SAACmE,GACA,OACE,4BACEtF,UAAU,4BACV9B,QAAS,kBACPmH,EAAaC,KAHjB,cAYR,yBAAKtF,UAAU,YACb,4BAAQA,UAAU,mBAChB,kBAAC,IAAD,CAAMtB,GAAE,gBAAW2E,EAAOlC,MAA1B,2BC3FjB0E,GANE,SAACC,GAAD,OAAe,SAAChI,GAG/B,OAFcK,aAAac,QAAQ,SAEpB,kBAAC6G,EAAchI,GAAY,kBAAC,IAAD,CAAUY,GAAG,QCa1CmH,OAfC,WACd,OACE,yBAAK7F,UAAU,kBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,0CACb,kBAAC,GAAD,OAEF,yBAAKA,UAAU,wBACb,kBAAC,GAAD,Y,sCCyJKnC,gBA9JG,SAACC,GAAW,IAAD,EACayC,mBAAS,CAC/CoC,KAAM,GACNK,YAAa,GACbG,aAAc,GACdP,SAAU,YACVjB,SAAU,GACVe,SAAU,KAPe,mBACpBqD,EADoB,KACNC,EADM,KAUzBrD,EAMEoD,EANFpD,KACAD,EAKEqD,EALFrD,SACAM,EAIE+C,EAJF/C,YACAG,EAGE4C,EAHF5C,aACAP,EAEEmD,EAFFnD,SACAjB,EACEoE,EADFpE,SAYIkC,EAAe,SAAClB,GAAD,OAAU,SAACuB,GAC9B8B,EAAgB,2BAAKD,GAAN,mBAAqBpD,EAAOuB,EAAEC,OAAOnC,WAEhDiE,EAA2B,SAAC/B,GAChC,IAAMgC,EAAahC,EAAEiC,OAAOC,UAC5BJ,EAAgB,2BAAKD,GAAN,IAAoB5C,aAAc+C,MAE7CG,EAAe,SAACC,GAAD,OAAe,SAACpC,GACnCA,EAAEqC,iBACFD,IAAYrE,MAAK,YAAe,IAAZpB,EAAW,EAAXA,KAClB7C,QAAQC,IAAI4C,GAnBdmF,EAAgB,2BACXD,GADU,IAEbpD,KAAM,GACNK,YAAa,GACbG,aAAc,GACdP,SAAU,YACVjB,SAAU,MAeV7D,EAAMQ,QAAQC,KAAK,UAkBvB,OACE,kBAAC,IAAD,CACEsD,SAAUrC,EACVmG,eAAgB,iBAAM,CAAC,CAAE1E,MAAO/B,KAChC4C,OAnBgB,SAACnB,EAAD,GAAqC,IAAnB2F,EAAkB,EAA1BzF,KAAQyF,UAC5BE,EAAkB7F,EAAMK,UAAU,CAAEC,MAAO/B,IAA3CsH,cAER7F,EAAMS,WAAW,CACfH,MAAO/B,EACP2B,KAAM,CACJ2F,cAAc,CAAEF,GAAH,oBAAiBE,QAchCtF,UAAW,CACTyB,OACAD,WACAE,WACAI,cACAG,eACAxB,cAGD,SAAC2E,EAAD,GAAyC,EAA3BzF,KAA4B,IAAtBW,EAAqB,EAArBA,QAASnB,EAAY,EAAZA,MAC5B,OACE,yBAAKL,UAAU,aACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,sCACb,2CAEF,0BAAMA,UAAU,aAAayG,SAAUJ,EAAaC,IAClD,2BACEvC,KAAK,OACL2C,UAAQ,EACR1G,UAAU,oBACV2C,KAAK,OACLgE,YAAY,cACZ3E,MAAOW,EACPsB,SAAUJ,EAAa,QACvB/C,GAAG,KAEL,2BACEiD,KAAK,OACL2C,UAAQ,EACR1G,UAAU,oBACV2C,KAAK,QACLgE,YAAY,eACZ3E,MAAOU,EACPuB,SAAUJ,EAAa,YACvB/C,GAAG,KAGL,4BACE6B,KAAK,WACL+D,UAAQ,EACR1G,UAAU,oBACVgC,MAAOY,EACPqB,SAAUJ,EAAa,aAEvB,4BAAQ7B,MAAM,aAAd,aACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,SAAd,UAEF,2BACE+B,KAAK,OACLpB,KAAK,cACL+D,UAAQ,EACR1G,UAAU,oBACViE,SAAUJ,EAAa,eACvB7B,MAAOgB,EACP2D,YAAY,kBACZ7F,GAAG,KAEL,2BAAO8F,QAAQ,gBAAf,eAEE,kBAAC,KAAD,CACEjE,KAAK,eACLkE,QAAS1D,EACT2D,OAAQ,CAAEC,OAAQd,MActB,4BACEe,SAAUxF,IAxFrBmB,IAASD,IAAaM,IAAgBG,IAAiBP,EAyF5CmB,KAAK,SACL/D,UAAU,qCAHZ,UAOCK,GAAS,kBAAC,EAAD,CAAOA,MAAOA,EAAMqB,mBCzI/BuF,GAhBI,SAAC,GAAuC,IAArC9F,EAAoC,EAApCA,IAAKuB,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACzC,OACE,wBACE5C,UAAU,OACVqC,MAAO,CAAEI,WAAW,OAAD,OAASC,EAAT,sCAEnB,0BAAM1C,UAAW4C,GAAWA,GAC5B,yBAAK5C,UAAU,aACb,kBAAC,IAAD,CAAMtB,GAAE,mBAAcyC,IACpB,4BAAKwB,O,MCyBAuE,OA9Bf,WACE,OACE,yBAAKlH,UAAU,OACb,wBAAIA,UAAU,cAAd,oBACmB,yCAGnB,kBAAC,IAAD,CAAOiB,MAAO/B,IACX,YAA+B,IAA5BsC,EAA2B,EAA3BA,QAASX,EAAkB,EAAlBA,KAAMR,EAAY,EAAZA,MACjB,OAAImB,EACK,kBAAC,EAAD,MAELnB,EACK,qCAAWA,IAEpBrC,QAAQC,IAAI4C,GAGV,wBAAIb,UAAU,SACXa,EAAK2F,cAAcnC,KAAI,SAAChB,GACvB,OAAO,kBAAC,GAAD,eAAYiB,IAAKjB,EAAOlC,KAASkC,cCwDzCxF,gBA9ED,SAACC,GACbE,QAAQC,IAAI,CAAEH,UADS,MAEKyC,mBAAS,CACnCoB,SAAU,GAEVwF,SAAU,KALW,mBAEhBC,EAFgB,KAERC,EAFQ,KAOf1F,EAAuByF,EAAvBzF,SAAUwF,EAAaC,EAAbD,SACZtD,EAAe,SAAClB,GAAD,OAAU,SAACuB,GAC9BmD,EAAU,2BAAKD,GAAN,mBAAezE,EAAOuB,EAAEC,OAAOnC,WAKpCqE,EAAe,SAACiB,GAAD,OAAe,SAACpD,GACnCA,EAAEqC,iBAEFe,IAAYrF,KAAZ,uCAAiB,6BAAAC,EAAA,6DAASrB,EAAT,EAASA,KACxB1C,aAAaoJ,QAAQ,QAAS1G,EAAKyG,UAAUtI,OAD9B,SAETlB,EAAM2D,UAFG,OALjB4F,EAAU,2BAAKD,GAAN,IAAczF,SAAU,GAAIwF,SAAU,MAS7CrJ,EAAMQ,QAAQC,KAAK,KAJJ,2CAAjB,yDAWF,OACE,yBAAKyB,UAAU,aACb,yBAAKA,UAAU,sCACb,sCAEF,kBAAC,IAAD,CAAU6B,SAAU/B,EAAYoB,UAAW,CAAES,WAAUwF,cACpD,SAACG,EAAD,GAAyC,EAA3BzG,KAA4B,IAAtBR,EAAqB,EAArBA,MAAOmB,EAAc,EAAdA,QAC1B,OACE,0BACEgG,OAAO,GACPxH,UAAU,aACVyG,SAAUJ,EAAaiB,IAEvB,2BACEvD,KAAK,OACL2C,UAAQ,EACR1G,UAAU,oBACV2C,KAAK,qBACLX,MAAOL,EACPsC,SAAUJ,EAAa,YACvB8C,YAAY,WACZ7F,GAAG,KAEL,2BACEiD,KAAK,WACL2C,UAAQ,EACR1G,UAAU,oBACV2C,KAAK,WACLgE,YAAY,qBACZ7F,GAAG,GACHkB,MAAOmF,EACPlD,SAAUJ,EAAa,cAEzB,4BACEE,KAAK,SACL/D,UAAU,mCACVgH,SAAUxF,IAvCHG,IAAawF,GAyCnB,IALH,UAQC9G,GAAS,kBAAC,EAAD,CAAOA,MAAOA,EAAMqB,kBCS7B7D,gBA9EA,SAACC,GAAW,IAAD,EACMyC,mBAAS,CACjCoB,SAAS,GACT8C,MAAM,GACN0C,SAAS,GACTM,gBAAgB,KALE,mBACfL,EADe,KACPC,EADO,OAOQ9G,oBAAS,GAPjB,mBAOfmH,EAPe,KAONC,EAPM,KAQfhG,EAAyCyF,EAAzCzF,SAAS8C,EAAgC2C,EAAhC3C,MAAM0C,EAA0BC,EAA1BD,SAASM,EAAiBL,EAAjBK,gBACzB5D,EAAa,SAAAlB,GAAI,OAAE,SAAAuB,GACrBmD,EAAU,2BAAID,GAAL,mBAAazE,EAAMuB,EAAEC,OAAOnC,WAUnCqE,EAAa,SAAAuB,GAAU,OAAE,SAAA1D,GAE3BA,EAAEqC,iBACFvI,QAAQC,IAAIH,GACZ8J,IAAa3F,KAAb,uCAAkB,6BAAAC,EAAA,sDAAOrB,EAAP,EAAOA,KACrB1C,aAAaoJ,QAAQ,QAAQ1G,EAAK+G,WAAW5I,OAC7C2I,GAAW,GAZfN,EAAU,2BAAID,GAAL,IACTzF,SAAS,GACbwF,SAAS,GACTM,gBAAgB,GACpBhD,MAAM,MAWMoD,YAAW,WACPF,GAAW,GACX7J,EAAMQ,QAAQC,KAAK,YACrB,KARY,2CAAlB,yDAwBJ,OACI,yBAAKyB,UAAU,aACX,yBAAKA,UAAU,sCAEf,uCAEC0H,GAXD,yBAAK1H,UAAU,uBAAf,sDAYA,kBAAC,IAAD,CAAU6B,SAAUtC,EAAa2B,UAAW,CAAES,WAAS8C,QAAM0C,cAErD,SAAES,EAAF,GAAoC,EAAtB/G,KAAuB,IAAlBR,EAAiB,EAAjBA,MAAMmB,EAAW,EAAXA,QACrB,OACKkG,GAEG,0BAAMF,OAAO,GAAGxH,UAAU,aAAayG,SAAUJ,EAAauB,IAC9E,2BAAO7D,KAAK,OAAO2C,UAAQ,EAAC1G,UAAU,oBAAmB2C,KAAK,qBAAqBX,MAAOL,EAAUsC,SAAUJ,EAAa,YAAY8C,YAAY,WAAW7F,GAAG,KACjK,2BAAOiD,KAAK,QAAS2C,UAAQ,EAAC1G,UAAU,oBAAoB2G,YAAY,kBAAkBhE,KAAK,QAAQ7B,GAAG,GAAGkB,MAAOyC,EAAOR,SAAUJ,EAAa,WAClJ,2BAAOE,KAAK,WAAW2C,UAAQ,EAAC1G,UAAU,oBAAoB2C,KAAK,WAAWgE,YAAY,qBAAqB7F,GAAG,GAAEkB,MAAOmF,EAAUlD,SAAUJ,EAAa,cAC5J,2BAAOE,KAAK,WAAW2C,UAAQ,EAAC1G,UAAU,oBAAoB2C,KAAK,mBAAmBgE,YAAY,wBAAwB7F,GAAG,GAAEkB,MAAOyF,EAAiBxD,SAAUJ,EAAa,qBAC9K,4BAAQE,KAAK,SAAS/D,UAAU,mCAAoCgH,SAAUxF,IA7BrEG,IAAY8C,IAAS0C,GAAWA,IAAWM,GA6BpD,WACCpH,GAAS,kBAAC,EAAD,CAAOA,MAAOA,EAAMqB,kBCtD/BoG,GAfM,SAAChC,GAAD,OAAe,SAAChI,GACnC,OACE,kBAAC,IAAD,CAAOmD,MAAOxB,IACX,YAAwC,IAArCoB,EAAoC,EAApCA,KAAMR,EAA8B,EAA9BA,MAAOmB,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAExB,OADAzD,QAAQC,IAAIoC,GACRmB,EAAgB,KAGlBX,GAAQ,kBAACiF,EAAD,iBAAehI,EAAf,CAAsB2D,QAASA,EAAS7C,QAASiC,UCgGpDkH,GAtGI,SAAC,GAAkB,IAAhBlH,EAAe,EAAfA,KAAMC,EAAS,EAATA,GACpBxC,EAAU0J,cAChBhK,QAAQC,IAAI4C,GACZ7C,QAAQC,IAAI6C,GAHuB,MAIKP,mBAAS,CAC/CY,IAAKL,EACL6B,KAAM9B,EAAK8B,KACXK,YAAanC,EAAKmC,YAElBJ,SAAU/B,EAAK+B,SAEfF,SAAU7B,EAAK6B,WAXkB,mBAI5BqD,EAJ4B,KAIdC,EAJc,KAcjC7E,EAME4E,EANF5E,IACAwB,EAKEoD,EALFpD,KACAD,EAIEqD,EAJFrD,SACAM,EAGE+C,EAHF/C,YAEAJ,EACEmD,EADFnD,SAGIiB,EAAe,SAAClB,GAAD,OAAU,SAACuB,GAC9B8B,EAAgB,2BAAKD,GAAN,mBAAqBpD,EAAOuB,EAAEC,OAAOnC,WAEhDqE,EAAe,SAAC4B,GAAD,OAAgB,SAACC,GACpCA,EAAM3B,iBACN0B,IAAahG,MAAK,SAACpB,GACjB7C,QAAQC,IAAI4C,GACZvC,EAAQC,KAAK,UAIjB,OACE,kBAAC,IAAD,CACEsD,SAAUvC,EACV4B,UAAW,CAAEyB,OAAMC,WAAUI,cAAaN,WAAUvB,SAEnD,SAAC8G,GACA,OACE,yBAAKjI,UAAU,YACb,yBAAKA,UAAU,wBACb,2CACA,0BAAMA,UAAU,aAAayG,SAAUJ,EAAa4B,IAClD,2BACElE,KAAK,OACL2C,UAAQ,EACR1G,UAAU,oBACV2C,KAAK,OACLgE,YAAY,cACZ3E,MAAOW,EACPsB,SAAUJ,EAAa,QACvB/C,GAAG,KAEL,2BACEiD,KAAK,OACL2C,UAAQ,EACR1G,UAAU,oBACV2C,KAAK,QACLgE,YAAY,eACZ3E,MAAOU,EACPuB,SAAUJ,EAAa,YACvB/C,GAAG,KAGL,4BACE6B,KAAK,WACL+D,UAAQ,EACR1G,UAAU,oBACVgC,MAAOY,EACPqB,SAAUJ,EAAa,aAEvB,4BAAQ7B,MAAM,aAAd,aACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,SAAd,UAEF,2BACE+B,KAAK,OACLpB,KAAK,cACL+D,UAAQ,EACR1G,UAAU,oBACViE,SAAUJ,EAAa,eACvB7B,MAAOgB,EACP2D,YAAY,kBACZ7F,GAAG,KAEL,6BACA,yBAAKd,UAAU,iBACb,4BAAQ+D,KAAK,SAAS/D,UAAU,kBAAhC,kBCvEHnC,gBAfQ,SAAC,GAAe,IAC7BiD,EAD4B,EAAZyB,MACHC,OAAb1B,GAER,OACE,kBAAC,IAAD,CAAOG,MAAO5B,EAAY6B,UAAW,CAAEC,IAAKL,KACzC,YAA+B,IAA5BU,EAA2B,EAA3BA,QAASnB,EAAkB,EAAlBA,MAAOQ,EAAW,EAAXA,KAClB,OAAIW,EAAgB,kBAAC,EAAD,MAChBnB,EAAc,kBAAC,EAAD,CAAOA,MAAOA,EAAMqB,UAE/B,kBAAC,GAAD,CAAYb,KAAMA,EAAKE,UAAWD,GAAIA,UCO/C/C,GAAS,IAAIoK,IAAa,CAC9BC,IAAK,gCACLC,aAAc,CACZC,YAAa,WAEfC,QAAS,SAACC,GACR,IAAMxJ,EAAQb,aAAac,QAAQ,SACnCuJ,EAAUC,WAAW,CACnBC,QAAS,CACPC,cAAe,UAAY3J,MAIjC4J,QAAS,YAAuB,IAApBC,EAAmB,EAAnBA,aACNA,IACF7K,QAAQC,IAAI,gBAAiB4K,GACG,MAA5BA,EAAaC,YACf3K,aAAa4K,WAAW,aA2B1BC,GAAkBlB,IArBX,SAAC,GAAD,IAAGrG,EAAH,EAAGA,QAAS7C,EAAZ,EAAYA,QAAZ,OACX,kBAAC,IAAD,KACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,CAAQD,QAASA,IACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqK,KAAK,WAAWnK,OAAK,EAACoK,UAAWC,KACxC,kBAAC,IAAD,CAAOF,KAAK,IAAInK,OAAK,EAACoK,UAAWhC,KACjC,kBAAC,IAAD,CAAO+B,KAAK,cAAcnK,OAAK,EAACoK,UAAWrD,GAASuD,MAEpD,kBAAC,IAAD,CAAOH,KAAK,UAAUnK,OAAK,EAACoK,UAAWzF,KAEvC,kBAAC,IAAD,CAAOwF,KAAK,eAAenK,OAAK,EAACoK,UAAWrD,GAASwD,KACrD,kBAAC,IAAD,CAAOJ,KAAK,YAAYnK,OAAK,EAACoK,UAAWI,KAEzC,kBAAC,IAAD,CAAOL,KAAK,SAASM,OAAQ,kBAAM,kBAAC,GAAD,CAAO9H,QAASA,OACnD,kBAAC,IAAD,CAAOwH,KAAK,UAAUC,UAAWM,KACjC,kBAAC,IAAD,CAAU9K,GAAG,YAOrB+K,IAASF,OACP,kBAAC,IAAD,CAAgBxL,OAAQA,IACtB,kBAACiL,GAAD,OAEFU,SAASC,eAAe,W","file":"static/js/main.cf86b43e.chunk.js","sourcesContent":["import React from 'react'\r\nimport {ApolloConsumer} from 'react-apollo';\r\n\r\nimport {withRouter } from 'react-router-dom';\r\n\r\nconst Logout = (props) => {\r\n   // const history=useHistory();\r\n    const handleLogout=(client)=>{\r\n        localStorage.clear(); \r\n        client.resetStore();\r\n        props.history.push('/')\r\n\r\n    }\r\n    return (\r\n        <ApolloConsumer>\r\n            {\r\n                (client)=>{\r\n                    console.log(client)\r\n                    return (\r\n\r\n\r\n        <button onClick={()=>handleLogout(client)}>\r\n            Logout\r\n        </button>\r\n                    )\r\n                }\r\n            }\r\n        </ApolloConsumer>\r\n    )\r\n}\r\n\r\nexport default withRouter(Logout)\r\n","import React from 'react'\r\nimport {Link ,NavLink} from 'react-router-dom';\r\nimport Logout from './auth/Logout';\r\n\r\nconst Navbar = ({session}) => {\r\n   // console.log(props.session)\r\n    const token=localStorage.getItem('token');\r\n    return (\r\n        <nav>\r\n            {!token && <NavbarUnAuth/>}\r\n            {token && <NavbarAuth session={session}/>}\r\n        </nav>\r\n    )\r\n}\r\nconst NavbarUnAuth=()=>\r\n{\r\n    return (\r\n        <ul>\r\n            <li>\r\n                <NavLink to=\"/\">Home</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/search\">Search</NavLink>\r\n                \r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/login\">Login</NavLink>\r\n\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/signup\">Signup</NavLink>\r\n\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\nconst NavbarAuth=({session})=>{\r\n    return (\r\n        <React.Fragment>\r\n          <ul>\r\n            <li>\r\n                <NavLink to=\"/\" exact>Home</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/search\">Search</NavLink>\r\n                \r\n            </li>\r\n          \r\n            <li>\r\n                <NavLink to=\"/recipe/add\">Add Recipe</NavLink>\r\n\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/profile\">Profile</NavLink>\r\n\r\n            </li>\r\n            <li>\r\n                <Logout/>\r\n            </li>\r\n        </ul>\r\n        {/* {session &&(\r\n\r\n            <h2>\r\n            Welcome {session.getCurrentUser.username}\r\n        </h2>\r\n        )} */}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import { gql } from 'apollo-boost';\r\n\r\nexport const GET_ALL_RECIPES = gql`\r\n  query {\r\n    getAllRecipes {\r\n      _id\r\n      name\r\n      imageUrl\r\n\r\n      category\r\n    }\r\n  }\r\n`;\r\nexport const SEARCH_RECPIES = gql`\r\n  query($searchTerm: String) {\r\n    searchRecipes(searchTerm: $searchTerm) {\r\n      _id\r\n      name\r\n      likes\r\n      category\r\n    }\r\n  }\r\n`;\r\nexport const GET_RECIPE = gql`\r\n  query($_id: ID!) {\r\n    getRecipe(_id: $_id) {\r\n      _id\r\n      name\r\n      imageUrl\r\n      category\r\n      description\r\n      instructions\r\n      createdDate\r\n      likes\r\n      createdBy\r\n    }\r\n  }\r\n`;\r\nexport const EDIT_RECIPE = gql`\r\n  mutation(\r\n    $_id: ID!\r\n    $name: String!\r\n    $category: String!\r\n    $description: String!\r\n    $imageUrl: String!\r\n  ) {\r\n    editRecipe(\r\n      _id: $_id\r\n      name: $name\r\n      description: $description\r\n      category: $category\r\n      imageUrl: $imageUrl\r\n    ) {\r\n      _id\r\n      name\r\n      category\r\n      description\r\n      imageUrl\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SIGNUP_USER = gql`\r\n  mutation($username: String!, $email: String!, $password: String!) {\r\n    signupUser(username: $username, email: $email, password: $password) {\r\n      token\r\n    }\r\n  }\r\n`;\r\nexport const ADD_RECIPE = gql`\r\n  mutation(\r\n    $name: String!\r\n    $imageUrl: String!\r\n    $description: String!\r\n    $category: String!\r\n    $instructions: String!\r\n    $username: String\r\n  ) {\r\n    addRecipe(\r\n      name: $name\r\n      imageUrl: $imageUrl\r\n      description: $description\r\n      category: $category\r\n      instructions: $instructions\r\n      username: $username\r\n    ) {\r\n      _id\r\n      name\r\n      category\r\n      imageUrl\r\n      description\r\n      instructions\r\n      createdDate\r\n      likes\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_CURRENT_USER = gql`\r\n  query {\r\n    getCurrentUser {\r\n      username\r\n      joinDate\r\n      email\r\n      favorites {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const GET_USER_RECIPES = gql`\r\n  query($username: String!) {\r\n    getUserRecipes(username: $username) {\r\n      _id\r\n      name\r\n      likes\r\n      imageUrl\r\n    }\r\n  }\r\n`;\r\nexport const LIKE_RECIPE = gql`\r\n  mutation($_id: ID!, $username: String!) {\r\n    likeRecipe(_id: $_id, username: $username) {\r\n      _id\r\n      likes\r\n    }\r\n  }\r\n`;\r\nexport const UNLIKE_RECIPE = gql`\r\n  mutation($_id: ID!, $username: String!) {\r\n    unlikeRecipe(_id: $_id, username: $username) {\r\n      _id\r\n      likes\r\n    }\r\n  }\r\n`;\r\nexport const DELETE_USER_RECIPE = gql`\r\n  mutation($_id: ID!) {\r\n    deleteUserRecipe(_id: $_id) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LOGIN_USER = gql`\r\n  mutation($username: String!, $password: String!) {\r\n    loginUser(username: $username, password: $password) {\r\n      token\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { PulseLoader } from 'react-spinners';\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <PulseLoader color={`#1eaedb`} size={30} margin={'3px'} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react'\r\n\r\nconst Error = ({error}) => {\r\n    return (\r\n        <p>\r\n            {error}\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Mutation } from 'react-apollo';\r\nimport { Query } from 'react-apollo';\r\nimport {\r\n  LIKE_RECIPE,\r\n  GET_RECIPE,\r\n  UNLIKE_RECIPE,\r\n  GET_CURRENT_USER,\r\n} from '../queries';\r\nimport { FaGratipay } from 'react-icons/fa';\r\nimport { IconContext } from 'react-icons';\r\nimport Error from './Error';\r\nconst LikeRecipe = (props) => {\r\n  const [likeThisRecipe, setLikeThisRecipe] = useState(false);\r\n\r\n  const handleLike = (likeRecipe, unlikeRecipe, refetch) => {\r\n    if (!likeThisRecipe) {\r\n      likeRecipe().then(async ({ data }) => {\r\n        setLikeThisRecipe((prev) => !prev);\r\n      });\r\n    } else {\r\n      unlikeRecipe().then(async ({ data }) => {\r\n        setLikeThisRecipe((prev) => !prev);\r\n      });\r\n    }\r\n  };\r\n  const updateLike = (cache, { data: { likeRecipe } }) => {\r\n    const { id } = props;\r\n    console.log({ id });\r\n    const { getRecipe } = cache.readQuery({\r\n      query: GET_RECIPE,\r\n      variables: { _id: id },\r\n    });\r\n    cache.writeQuery({\r\n      query: GET_RECIPE,\r\n      variables: { _id: id },\r\n      data: {\r\n        getRecipe: { ...getRecipe, likes: likeRecipe.likes + 1 },\r\n      },\r\n    });\r\n  };\r\n  const updateUnlike = (cache, { data: { unlikeRecipe } }) => {\r\n    const { id } = props;\r\n    const { getRecipe } = cache.readQuery({\r\n      query: GET_RECIPE,\r\n      variables: { _id: id },\r\n    });\r\n    cache.writeQuery({\r\n      query: GET_RECIPE,\r\n      variables: { _id: id },\r\n      data: {\r\n        getRecipe: { ...getRecipe, likes: unlikeRecipe.likes - 1 },\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Query query={GET_CURRENT_USER}>\r\n        {({ data, loading, error, refetch }) => {\r\n          if (error) return <Error error={error.message} />;\r\n\r\n          const username = data.getCurrentUser.username;\r\n\r\n          return (\r\n            <Mutation\r\n              mutation={UNLIKE_RECIPE}\r\n              update={updateUnlike}\r\n              variables={{ _id: props.id, username }}\r\n            >\r\n              {(unlikeRecipe) => {\r\n                return (\r\n                  <Mutation\r\n                    mutation={LIKE_RECIPE}\r\n                    variables={{ _id: props.id, username }}\r\n                    update={updateLike}\r\n                  >\r\n                    {(LikeRecipe) => {\r\n                      return (\r\n                        username && (\r\n                          <IconContext.Provider\r\n                            value={\r\n                              likeThisRecipe\r\n                                ? {\r\n                                    color: 'red',\r\n                                    className: 'global-class-name',\r\n                                    size: '2.5rem',\r\n                                  }\r\n                                : {\r\n                                    color: 'black',\r\n                                    className: 'global-class-name',\r\n                                    size: '1.5rem',\r\n                                  }\r\n                            }\r\n                          >\r\n                            <div\r\n                              onClick={() =>\r\n                                handleLike(LikeRecipe, unlikeRecipe, refetch)\r\n                              }\r\n                              style={{ cursor: 'pointer' }}\r\n                              className=\"float-right\"\r\n                            >\r\n                              <FaGratipay />\r\n                            </div>\r\n                          </IconContext.Provider>\r\n                        )\r\n                      );\r\n                    }}\r\n                  </Mutation>\r\n                );\r\n              }}\r\n            </Mutation>\r\n          );\r\n        }}\r\n      </Query>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default LikeRecipe;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Query } from 'react-apollo';\r\nimport { GET_RECIPE } from '../../queries';\r\nimport Spinner from '../Spinner';\r\n\r\nimport LikeRecipe from '../LikeRecipe';\r\nimport Error from '../Error';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst RecipePage = ({ match }) => {\r\n  console.log(match.params);\r\n  const _id = match.params.id;\r\n  console.log(_id);\r\n\r\n  return (\r\n    <Query query={GET_RECIPE} variables={{ _id }}>\r\n      {({ loading, error, data }) => {\r\n        if (loading) return <Spinner />;\r\n        if (error) return <Error error={error.message} />;\r\n\r\n        return (\r\n          <div className=\"App\">\r\n            <div\r\n              className=\"recipe-image\"\r\n              style={{\r\n                background: `url(${data.getRecipe.imageUrl})center center /cover no-repeat `,\r\n              }}\r\n            ></div>\r\n            <div className=\"recipe\">\r\n              <div className=\"recipe-header\">\r\n                <h2 className=\"recipe-name\">\r\n                  <strong>{data.getRecipe.name}</strong>\r\n                </h2>\r\n                <h5>\r\n                  <strong>{data.getRecipe.category}</strong>\r\n                </h5>\r\n                <p>\r\n                  Created by <strong>{data.getRecipe.createdBy}</strong>\r\n                </p>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-2 offset-md-4\">\r\n                    <p>\r\n                      {data.getRecipe.likes}{' '}\r\n                      <span role=\"img\" aria-label=\"heart\">\r\n                        {' '}\r\n                        ❤️\r\n                      </span>{' '}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"col-md-2 \">\r\n                    <LikeRecipe id={data.getRecipe._id} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <blockquote className=\"recipe-description\">\r\n                {data.getRecipe.description}\r\n              </blockquote>\r\n              <h3 className=\"recipe instructions__title\">Instructions</h3>\r\n              <div\r\n                className=\"recipe-instructions\"\r\n                dangerouslySetInnerHTML={{\r\n                  __html: data.getRecipe.instructions,\r\n                }}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </Query>\r\n  );\r\n};\r\n\r\nexport default withRouter(RecipePage);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nconst SearchItem = ({ recipe }) => {\r\n  return (\r\n    <div\r\n      className=\"row border border-black rounded mt-2 mb-2\"\r\n      style={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        alignContent: 'center',\r\n      }}\r\n    >\r\n      <div\r\n        className=\"col-md-4 text-danger\"\r\n        style={{ display: 'flex', alignItems: 'center' }}\r\n      >\r\n        <Link to={`/recipes/${recipe._id}`}>\r\n          <h4>{recipe.name}</h4>\r\n        </Link>\r\n      </div>\r\n      <div\r\n        className=\"col-md-4\"\r\n        // style={{\r\n        //   display: 'flex',\r\n        //   alignItems: 'center',\r\n        //   alignContent: 'center',\r\n        // }}\r\n      >\r\n        <p> {recipe.likes} &nbsp; likes &nbsp;</p>\r\n      </div>\r\n      <div\r\n        className=\"col-md-4\"\r\n        // style={{\r\n        //   display: 'flex',\r\n        //   alignItems: 'center',\r\n        //   alignContent: 'center',\r\n        // }}\r\n      >\r\n        <button className=\"btn btn-warning\"> {recipe.category} </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchItem;\r\n","import React, { useState } from 'react';\r\nimport { Query } from 'react-apollo';\r\nimport { SEARCH_RECPIES } from '../../queries';\r\nimport { Link } from 'react-router-dom';\r\nimport { ApolloConsumer } from 'react-apollo';\r\nimport SearchItem from './SearchItem';\r\nconst Search = () => {\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const handleChange = ({ searchRecipes }) => {\r\n    setSearchResults({ searchRecipes });\r\n    console.log({ searchRecipes });\r\n  };\r\n  return (\r\n    <ApolloConsumer>\r\n      {(client) => {\r\n        return (\r\n          <Query query={SEARCH_RECPIES} variables={{ searchTerm }}>\r\n            {({ data, loading, error }) => {\r\n              console.log(data);\r\n              // if (loading) return <div>Loading</div>;\r\n              if (error) return <div>{error.message}</div>;\r\n              return (\r\n                <div className=\"container text-center mt-5\">\r\n                  <div className=\"row mb-5\">\r\n                    <div className=\"col-md-6 offset-md-3\">\r\n                      <div className=\"input-group\">\r\n                        <input\r\n                          className=\"pt-1 pb-1\"\r\n                          type=\"search\"\r\n                          name=\"search\"\r\n                          id=\"\"\r\n                          autoFocus\r\n                          value={searchTerm}\r\n                          onChange={async (e) => {\r\n                            console.log(e.target.value);\r\n                            e.persist();\r\n                            setSearchTerm(e.target.value);\r\n                            const { data } = await client.query({\r\n                              query: SEARCH_RECPIES,\r\n                              variables: { searchTerm: e.target.value },\r\n                            });\r\n                            handleChange(data);\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {!loading && (\r\n                    <ul>\r\n                      {data.searchRecipes.map((recipe) => {\r\n                        return <SearchItem key={recipe._id} recipe={recipe} />;\r\n                      })}\r\n                    </ul>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          </Query>\r\n        );\r\n      }}\r\n    </ApolloConsumer>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Query } from 'react-apollo';\r\nimport Error from '../Error';\r\nimport { GET_CURRENT_USER } from '../../queries';\r\nconst UserInfo = ({ session }) => {\r\n  const formatDate = (date) => {\r\n    const newDate = new Date(date).toLocaleDateString('en-us');\r\n    const newTime = new Date(date).toLocaleTimeString('en-us');\r\n    return `${newDate}at ${newTime}`;\r\n  };\r\n  return (\r\n    <Query query={GET_CURRENT_USER}>\r\n      {({ data: { getCurrentUser }, error, loading }) => {\r\n        console.log(getCurrentUser);\r\n        console.log({ error });\r\n        const user = getCurrentUser;\r\n        if (loading) return <div>Loading...</div>;\r\n        if (error) return <Error error={error.message} />;\r\n        return (\r\n          <div>\r\n            <h3>User Info</h3>\r\n            <p>Username: {user.username}</p>\r\n            <p>Email :{user.email}</p>\r\n            <p>Join Date :{formatDate(user.joinDate)}</p>\r\n            {/* <div className=\"card bg-white\" >\r\n                                    <div className=\"card-header text-md-center\">\r\n                                        User Info\r\n                                    </div>\r\n                                    <ul className=\"list-group \">\r\n                                        <li className=\"list-group-item\">{user.username}</li>\r\n                                        <li className=\"list-group-item\">{user.email}</li>\r\n                                        <li className=\"list-group-item\">Join Date :{formatDate(user.joinDate)}</li>\r\n                                    </ul>\r\n                                    </div> */}\r\n            <ul>\r\n              <h3>{user.username}'s Favorites</h3>\r\n              {user.favorites &&\r\n                user.favorites.map((favorite) => {\r\n                  return (\r\n                    <li key={favorite._id}>\r\n                      <Link to={`/recipes/${favorite._id}`}>\r\n                        <p>{favorite.name}</p>\r\n                      </Link>\r\n                    </li>\r\n                  );\r\n                })}\r\n              {!user.favorites && (\r\n                <p className=\"bg-info\">\r\n                  you have no favorites currenty go add one\r\n                </p>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        );\r\n      }}\r\n    </Query>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","import React, { useState } from 'react';\r\nimport { Query } from 'react-apollo';\r\nimport { Link } from 'react-router-dom';\r\nimport { Mutation } from 'react-apollo';\r\nimport Spinner from '../Spinner';\r\nimport {\r\n  GET_USER_RECIPES,\r\n  DELETE_USER_RECIPE,\r\n  GET_ALL_RECIPES,\r\n  GET_CURRENT_USER,\r\n} from '../../queries';\r\nconst UserRecipes = () => {\r\n  const handleDelete = (deleteUserRecipe) => {\r\n    const confirmDelete = window.confirm(\r\n      'Are you sure your want to delete this recipe'\r\n    );\r\n    if (confirmDelete) {\r\n      deleteUserRecipe().then(({ data }) => {\r\n        console.log(data);\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container\">\r\n        <Query query={GET_CURRENT_USER}>\r\n          {({ loading, data, error }) => {\r\n            if (loading) return <Spinner />;\r\n            console.log(data);\r\n            const username = data.getCurrentUser.username;\r\n            return (\r\n              <Query query={GET_USER_RECIPES} variables={{ username }}>\r\n                {({ data, loading, error }) => {\r\n                  if (loading) return <Spinner />;\r\n                  if (error) return <div>{error.message}</div>;\r\n                  console.log(data);\r\n                  return (\r\n                    <React.Fragment>\r\n                      <h3>Your Recipes</h3>\r\n\r\n                      {!data.getUserRecipes.length && (\r\n                        <p>you have not added any recipes</p>\r\n                      )}\r\n\r\n                      {data.getUserRecipes.map((recipe) => {\r\n                        return (\r\n                          // <li key={recipe._id}>\r\n                          //     <Link to={`/recipes/${recipe._id}`}>\r\n\r\n                          // <p>{recipe.name}</p>\r\n                          //     </Link>\r\n                          // <p style={{marginBottom:0}}>{recipe.likes}</p>\r\n\r\n                          <div className=\"row mt-2 pt-2 pb-2 border border-primary rounded \">\r\n                            <div className=\"col-md-4\">\r\n                              <h5 className=\"card-title\">{recipe.name}</h5>\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                              <Mutation\r\n                                mutation={DELETE_USER_RECIPE}\r\n                                variables={{ _id: recipe._id }}\r\n                                refetchQueries={() => [\r\n                                  { query: GET_ALL_RECIPES },\r\n                                  { query: GET_CURRENT_USER },\r\n                                ]}\r\n                                update={(\r\n                                  cache,\r\n                                  { data: { deleteUserRecipe } }\r\n                                ) => {\r\n                                  const { getUserRecipes } = cache.readQuery({\r\n                                    query: GET_USER_RECIPES,\r\n                                    variables: { username },\r\n                                  });\r\n                                  cache.writeQuery({\r\n                                    query: GET_USER_RECIPES,\r\n                                    variables: { username },\r\n                                    data: {\r\n                                      getUserRecipes: getUserRecipes.filter(\r\n                                        (recipe) =>\r\n                                          recipe._id !== deleteUserRecipe._id\r\n                                      ),\r\n                                    },\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {(deleteUserRecipe, attrs = {}) => {\r\n                                  return (\r\n                                    <button\r\n                                      className=\"btn btn-danger float-left\"\r\n                                      onClick={() =>\r\n                                        handleDelete(deleteUserRecipe)\r\n                                      }\r\n                                    >\r\n                                      delete\r\n                                    </button>\r\n                                  );\r\n                                }}\r\n                              </Mutation>\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                              <button className=\"btn btn-warning\">\r\n                                <Link to={`/edit/${recipe._id}`}>Update</Link>\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </React.Fragment>\r\n                  );\r\n                }}\r\n              </Query>\r\n            );\r\n          }}\r\n        </Query>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserRecipes;\r\n","import React from 'react';\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst WithAuth = (Component) => (props) => {\r\n  const token = localStorage.getItem('token');\r\n\r\n  return token ? <Component {...props} /> : <Redirect to=\"/\" />;\r\n};\r\n\r\nexport default WithAuth;\r\n","import React from 'react';\r\nimport UserInfo from './UserInfo';\r\nimport UserRecipes from './UserRecipes';\r\nimport WithAuth from '../WithAuth';\r\n\r\nconst Profile = () => {\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4 border border-primary rounded\">\r\n          <UserInfo />\r\n        </div>\r\n        <div className=\"col-md-7 offset-md-1\">\r\n          <UserRecipes />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WithAuth(Profile);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Mutation } from 'react-apollo';\r\nimport Error from '../Error';\r\nimport { ADD_RECIPE, GET_ALL_RECIPES } from '../../queries';\r\nimport { withRouter } from 'react-router-dom';\r\nimport WithAuth from '../WithAuth';\r\nimport CKeditor from 'react-ckeditor-component';\r\n\r\nconst AddRecipe = (props) => {\r\n  const [inputsValues, setInputsValues] = useState({\r\n    name: '',\r\n    description: '',\r\n    instructions: '',\r\n    category: 'Breakfast',\r\n    username: '',\r\n    imageUrl: '',\r\n  });\r\n  const {\r\n    name,\r\n    imageUrl,\r\n    description,\r\n    instructions,\r\n    category,\r\n    username,\r\n  } = inputsValues;\r\n  const clearState = () => {\r\n    setInputsValues({\r\n      ...inputsValues,\r\n      name: '',\r\n      description: '',\r\n      instructions: '',\r\n      category: 'Breakfast',\r\n      username: '',\r\n    });\r\n  };\r\n  const handleChange = (name) => (e) => {\r\n    setInputsValues({ ...inputsValues, [name]: e.target.value });\r\n  };\r\n  const handleInstructionsChange = (e) => {\r\n    const newContent = e.editor.getData();\r\n    setInputsValues({ ...inputsValues, instructions: newContent });\r\n  };\r\n  const handleSubmit = (addRecipe) => (e) => {\r\n    e.preventDefault();\r\n    addRecipe().then(({ data }) => {\r\n      console.log(data);\r\n      clearState();\r\n      props.history.push('/');\r\n    });\r\n  };\r\n  const updateCache = (cache, { data: { addRecipe } }) => {\r\n    const { getAllRecipes } = cache.readQuery({ query: GET_ALL_RECIPES });\r\n\r\n    cache.writeQuery({\r\n      query: GET_ALL_RECIPES,\r\n      data: {\r\n        getAllRecipes: [addRecipe, ...getAllRecipes],\r\n      },\r\n    });\r\n  };\r\n  const inValidForm = () => {\r\n    const isInvalid =\r\n      !name || !imageUrl || !description || !instructions || !category;\r\n    return isInvalid;\r\n  };\r\n  return (\r\n    <Mutation\r\n      mutation={ADD_RECIPE}\r\n      refetchQueries={() => [{ query: GET_ALL_RECIPES }]}\r\n      update={updateCache}\r\n      variables={{\r\n        name,\r\n        imageUrl,\r\n        category,\r\n        description,\r\n        instructions,\r\n        username,\r\n      }}\r\n    >\r\n      {(addRecipe, { data, loading, error }) => {\r\n        return (\r\n          <div className=\"container\">\r\n            <div className=\"col-md-8 offset-md-2\">\r\n              <div className=\"text-center text-primary pb-4 pt-4\">\r\n                <h2>Add Recipe</h2>\r\n              </div>\r\n              <form className=\"form-group\" onSubmit={handleSubmit(addRecipe)}>\r\n                <input\r\n                  type=\"text\"\r\n                  required\r\n                  className=\"form-control mb-4\"\r\n                  name=\"name\"\r\n                  placeholder=\"Recipe Name\"\r\n                  value={name}\r\n                  onChange={handleChange('name')}\r\n                  id=\"\"\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  required\r\n                  className=\"form-control mb-4\"\r\n                  name=\"image\"\r\n                  placeholder=\"Recipe Image\"\r\n                  value={imageUrl}\r\n                  onChange={handleChange('imageUrl')}\r\n                  id=\"\"\r\n                />\r\n\r\n                <select\r\n                  name=\"category\"\r\n                  required\r\n                  className=\"form-control mb-4\"\r\n                  value={category}\r\n                  onChange={handleChange('category')}\r\n                >\r\n                  <option value=\"Breakfast\">Breakfast</option>\r\n                  <option value=\"Lunch\">Lunch</option>\r\n                  <option value=\"Dinner\">Dinner</option>\r\n                  <option value=\"Snack\">Snack</option>\r\n                </select>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"description\"\r\n                  required\r\n                  className=\"form-control mb-4\"\r\n                  onChange={handleChange('description')}\r\n                  value={description}\r\n                  placeholder=\"Add description\"\r\n                  id=\"\"\r\n                />\r\n                <label htmlFor=\"instructions\">\r\n                  Instructions\r\n                  <CKeditor\r\n                    name=\"instructions\"\r\n                    content={instructions}\r\n                    events={{ change: handleInstructionsChange }}\r\n                  />\r\n                </label>\r\n                {/* <textarea\r\n                  name=\"instructions\"\r\n                  id=\"\"\r\n                  required\r\n                  className=\"form-control mb-4\"\r\n                  onChange={handleChange('instructions')}\r\n                  value={instructions}\r\n                  placeholder=\"add Instructions\"\r\n                  cols=\"30\"\r\n                  rows=\"10\"\r\n                ></textarea> */}\r\n                <button\r\n                  disabled={loading || inValidForm()}\r\n                  type=\"submit\"\r\n                  className=\"btn  btn-primary btn-lg btn-block\"\r\n                >\r\n                  Submit\r\n                </button>\r\n                {error && <Error error={error.message} />}\r\n              </form>\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </Mutation>\r\n  );\r\n};\r\n\r\nexport default withRouter(AddRecipe);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst RecipeItem = ({ _id, imageUrl, name, category }) => {\r\n  return (\r\n    <li\r\n      className=\"card\"\r\n      style={{ background: `url(${imageUrl}) center center /cover no-repeat` }}\r\n    >\r\n      <span className={category}>{category}</span>\r\n      <div className=\"card-text\">\r\n        <Link to={`/recipes/${_id}`}>\r\n          <h4>{name}</h4>\r\n        </Link>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default RecipeItem;\r\n","import React from 'react';\nimport RecipeItem from './Recipe/RecipeItem';\nimport './App.css';\nimport { GET_ALL_RECIPES } from '../queries';\nimport { Query } from 'react-apollo';\nimport Spinner from './Spinner';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"main-title\">\n        Find Recipes you <strong>Love</strong>\n      </h1>\n\n      <Query query={GET_ALL_RECIPES}>\n        {({ loading, data, error }) => {\n          if (loading) {\n            return <Spinner />;\n          }\n          if (error) {\n            return <div>Error{error}</div>;\n          }\n          console.log(data);\n\n          return (\n            <ul className=\"cards\">\n              {data.getAllRecipes.map((recipe) => {\n                return <RecipeItem key={recipe._id} {...recipe} />;\n              })}\n            </ul>\n          );\n        }}\n      </Query>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState } from 'react';\r\nimport { Mutation } from 'react-apollo';\r\nimport { LOGIN_USER } from '../../queries/index';\r\nimport Error from '../Error';\r\nimport { withRouter } from 'react-router-dom';\r\nconst Login = (props) => {\r\n  console.log({ props });\r\n  const [inputs, setInputs] = useState({\r\n    username: '',\r\n\r\n    password: '',\r\n  });\r\n  const { username, password } = inputs;\r\n  const handleChange = (name) => (e) => {\r\n    setInputs({ ...inputs, [name]: e.target.value });\r\n  };\r\n  const clearState = () => {\r\n    setInputs({ ...inputs, username: '', password: '' });\r\n  };\r\n  const handleSubmit = (loginUser) => (e) => {\r\n    e.preventDefault();\r\n\r\n    loginUser().then(async ({ data }) => {\r\n      localStorage.setItem('token', data.loginUser.token);\r\n      await props.refetch();\r\n      clearState();\r\n      props.history.push('/');\r\n    });\r\n  };\r\n  const validateForm = () => {\r\n    const isInvalid = !username || !password;\r\n    return isInvalid;\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"text-center text-primary pb-4 pt-4\">\r\n        <h2>Login</h2>\r\n      </div>\r\n      <Mutation mutation={LOGIN_USER} variables={{ username, password }}>\r\n        {(loginUser, { data, error, loading }) => {\r\n          return (\r\n            <form\r\n              action=\"\"\r\n              className=\"form-group\"\r\n              onSubmit={handleSubmit(loginUser)}\r\n            >\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                className=\"form-control mb-4\"\r\n                name=\"Type your Username\"\r\n                value={username}\r\n                onChange={handleChange('username')}\r\n                placeholder=\"Username\"\r\n                id=\"\"\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                required\r\n                className=\"form-control mb-4\"\r\n                name=\"password\"\r\n                placeholder=\"Type your password\"\r\n                id=\"\"\r\n                value={password}\r\n                onChange={handleChange('password')}\r\n              />\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary btn-lg btn-block\"\r\n                disabled={loading || validateForm()}\r\n              >\r\n                {' '}\r\n                Submit\r\n              </button>\r\n              {error && <Error error={error.message} />}\r\n            </form>\r\n          );\r\n        }}\r\n      </Mutation>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Login);\r\n","import React,{useState} from 'react'\r\nimport {Mutation} from 'react-apollo';\r\nimport {SIGNUP_USER} from '../../queries/index';\r\nimport Error from '../Error';\r\nimport {withRouter} from 'react-router-dom';\r\nconst Signup = (props) => {\r\n    const [inputs, setInputs] = useState({\r\n        username:\"\",\r\n        email:\"\",\r\n        password:'',\r\n        passwordConfirm:\"\"\r\n    })\r\n    const [success, setSuccess] = useState(false)\r\n    const {username,email,password,passwordConfirm}=inputs;\r\n    const handleChange=name=>e=>{\r\n        setInputs({...inputs,[name]:e.target.value})\r\n        \r\n    }\r\n    const clearState=()=>{\r\n        setInputs({...inputs,\r\n        username:'',\r\n    password:'',\r\n    passwordConfirm:'',\r\nemail:''})\r\n    }\r\n    const handleSubmit=signupUser=>e=>{\r\n\r\n        e.preventDefault();\r\n        console.log(props);\r\n        signupUser().then(async({data})=>{\r\n            localStorage.setItem('token',data.signupUser.token);\r\n            setSuccess(true)\r\n          //  await props.refetch()\r\n            clearState();\r\n            setTimeout(()=>{\r\n                setSuccess(false);\r\n                props.history.push('/login')\r\n            },3000)\r\n\r\n        })\r\n    }\r\n    const validateForm=()=>{\r\n        const isInvalid=!username ||!email ||!password ||password!==passwordConfirm;\r\n        return isInvalid\r\n\r\n    }\r\n    const showSuccessMessage=()=>{\r\n        return (\r\n            <div className=\"alert alert-success\">\r\n            You are successfully registred try to login please\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"text-center text-primary pb-4 pt-4\">\r\n\r\n            <h2 >Signup</h2>\r\n            </div>\r\n            {success && showSuccessMessage()}\r\n            <Mutation mutation={SIGNUP_USER} variables={{ username,email,password }}>\r\n                {\r\n                    ( signupUser,{data,error,loading})=>{\r\n                        return (\r\n                            !success && (\r\n\r\n                                <form action=\"\" className=\"form-group\" onSubmit={handleSubmit(signupUser)}>\r\n                <input type=\"text\" required className=\"form-control mb-4\"name=\"Type your Username\" value={username} onChange={handleChange('username')}placeholder=\"Username\" id=\"\"/>\r\n                <input type=\"email\"  required className=\"form-control mb-4\" placeholder=\"Type your Email\" name=\"email\" id=\"\" value={email} onChange={handleChange('email')}/>\r\n                <input type=\"password\" required className=\"form-control mb-4\" name=\"password\" placeholder=\"Type your password\" id=\"\"value={password} onChange={handleChange('password')}/>\r\n                <input type=\"password\" required className=\"form-control mb-4\" name=\"passwordConfirm \" placeholder=\"Confirm your password\" id=\"\"value={passwordConfirm} onChange={handleChange('passwordConfirm')}/>\r\n                <button type=\"submit\" className=\"btn btn-primary btn-lg btn-block\"  disabled={loading||validateForm()}> Submit</button>\r\n                {error && <Error error={error.message}/> }\r\n                </form>\r\n                )\r\n                        )\r\n                    }\r\n                }\r\n            </Mutation>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Signup)\r\n","import React, { Component } from 'react';\r\nimport { Query } from 'react-apollo';\r\nimport { GET_CURRENT_USER } from '../queries';\r\nconst WithSessions = (Component) => (props) => {\r\n  return (\r\n    <Query query={GET_CURRENT_USER}>\r\n      {({ data, error, loading, refetch }) => {\r\n        console.log(error);\r\n        if (loading) return null;\r\n\r\n        return (\r\n          data && <Component {...props} refetch={refetch} session={data} />\r\n        );\r\n      }}\r\n    </Query>\r\n  );\r\n};\r\n\r\nexport default WithSessions;\r\n","import React, { useState } from 'react';\r\nimport { Mutation } from 'react-apollo';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { EDIT_RECIPE } from '../../queries';\r\n\r\nconst UserRecipe = ({ data, id }) => {\r\n  const history = useHistory();\r\n  console.log(data);\r\n  console.log(id);\r\n  const [inputsValues, setInputsValues] = useState({\r\n    _id: id,\r\n    name: data.name,\r\n    description: data.description,\r\n\r\n    category: data.category,\r\n\r\n    imageUrl: data.imageUrl,\r\n  });\r\n  const {\r\n    _id,\r\n    name,\r\n    imageUrl,\r\n    description,\r\n\r\n    category,\r\n  } = inputsValues;\r\n\r\n  const handleChange = (name) => (e) => {\r\n    setInputsValues({ ...inputsValues, [name]: e.target.value });\r\n  };\r\n  const handleSubmit = (editRecipe) => (event) => {\r\n    event.preventDefault();\r\n    editRecipe().then((data) => {\r\n      console.log(data);\r\n      history.push('/');\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Mutation\r\n      mutation={EDIT_RECIPE}\r\n      variables={{ name, category, description, imageUrl, _id }}\r\n    >\r\n      {(editRecipe) => {\r\n        return (\r\n          <div className=\"row mt-5\">\r\n            <div className=\"col-md-8 offset-md-2\">\r\n              <h4>Edit Recipe</h4>\r\n              <form className=\"form-group\" onSubmit={handleSubmit(editRecipe)}>\r\n                <input\r\n                  type=\"text\"\r\n                  required\r\n                  className=\"form-control mb-4\"\r\n                  name=\"name\"\r\n                  placeholder=\"Recipe Name\"\r\n                  value={name}\r\n                  onChange={handleChange('name')}\r\n                  id=\"\"\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  required\r\n                  className=\"form-control mb-4\"\r\n                  name=\"image\"\r\n                  placeholder=\"Recipe Image\"\r\n                  value={imageUrl}\r\n                  onChange={handleChange('imageUrl')}\r\n                  id=\"\"\r\n                />\r\n\r\n                <select\r\n                  name=\"category\"\r\n                  required\r\n                  className=\"form-control mb-4\"\r\n                  value={category}\r\n                  onChange={handleChange('category')}\r\n                >\r\n                  <option value=\"Breakfast\">Breakfast</option>\r\n                  <option value=\"Lunch\">Lunch</option>\r\n                  <option value=\"Dinner\">Dinner</option>\r\n                  <option value=\"Snack\">Snack</option>\r\n                </select>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"description\"\r\n                  required\r\n                  className=\"form-control mb-4\"\r\n                  onChange={handleChange('description')}\r\n                  value={description}\r\n                  placeholder=\"Add description\"\r\n                  id=\"\"\r\n                />\r\n                <hr />\r\n                <div className=\"modal-buttons\">\r\n                  <button type=\"submit\" className=\"button-primary\">\r\n                    Update\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </Mutation>\r\n  );\r\n};\r\n\r\nexport default UserRecipe;\r\n","import React, { useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Query } from 'react-apollo';\r\nimport Spinner from '../Spinner';\r\nimport Error from '../Error';\r\nimport { GET_RECIPE } from '../../queries';\r\nimport UserRecipe from './UserRecipe';\r\n\r\nconst EditUserRecipe = ({ match }) => {\r\n  const { id } = match.params;\r\n\r\n  return (\r\n    <Query query={GET_RECIPE} variables={{ _id: id }}>\r\n      {({ loading, error, data }) => {\r\n        if (loading) return <Spinner />;\r\n        if (error) return <Error error={error.message} />;\r\n\r\n        return <UserRecipe data={data.getRecipe} id={id} />;\r\n      }}\r\n    </Query>\r\n  );\r\n};\r\n\r\nexport default withRouter(EditUserRecipe);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Navbar from './components/Navbar';\nimport RecipePage from './components/Recipe/RecipePage';\nimport Search from './components/Recipe/Search';\nimport Profile from './components/User/Profile';\nimport AddRecipe from './components/Recipe/AddRecipe';\nimport App from './components/App';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport Login from './components/auth/Login';\nimport Signup from './components/auth/Signup';\nimport WithSessions from './components/WithSessions';\nimport WithAuth from './components/WithAuth';\nimport EditUserRecipe from './components/Recipe/EditUserRecipe';\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/graphql',\n  fetchOptions: {\n    credentials: 'include',\n  },\n  request: (operation) => {\n    const token = localStorage.getItem('token');\n    operation.setContext({\n      headers: {\n        authorization: 'Bearer ' + token,\n      },\n    });\n  },\n  onError: ({ networkError }) => {\n    if (networkError) {\n      console.log('network Error', networkError);\n      if (networkError.statusCode === 401) {\n        localStorage.removeItem('token');\n      }\n    }\n  },\n});\n\nconst Root = ({ refetch, session }) => (\n  <Router>\n    <React.Fragment>\n      <Navbar session={session} />\n      <Switch>\n        <Route path=\"/profile\" exact component={Profile} />\n        <Route path=\"/\" exact component={App} />\n        <Route path=\"/recipe/add\" exact component={WithAuth(AddRecipe)} />\n\n        <Route path=\"/search\" exact component={Search} />\n\n        <Route path=\"/recipes/:id\" exact component={WithAuth(RecipePage)} />\n        <Route path=\"/edit/:id\" exact component={EditUserRecipe} />\n\n        <Route path=\"/login\" render={() => <Login refetch={refetch} />} />\n        <Route path=\"/signup\" component={Signup} />\n        <Redirect to=\"/\" />\n      </Switch>\n    </React.Fragment>\n  </Router>\n);\nconst RootWithSession = WithSessions(Root);\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <RootWithSession />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}